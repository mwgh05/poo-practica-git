input { 
  http_poller {
    urls => {
      test => {
        method => get
        url => "https://graph.facebook.com/me?fields=feed.limit(500)&access_token=EAAHbXlchiI0BAOthbZAFmg4Pq3cbXgUYQZBH6aO8UeuUitRIcjuELjSX3AiYfGeohh2zE0uZAT7hdZCCB3CiEuoLiXu0dZAySUbRUba9EBOFws1UtTg0aHeTuCGvL7n4cz05YI4A8hHhYcAEudcktBJlAxEcLelxk9AQX1Gs0OieEh3sUSMnr1TsO2GrDurSGNqDfLQZBUPg6XQnmFYUnxPhusDJdrJ2DTaR8nawTzLwZDZD"
        headers => {
          Accept => "application/json"
        }
      }
    }
    request_timeout => 60
    schedule => { "in" => "0s" }
  }
}
filter {
  split {
    field => "[feed][data]"
  }
  if ("" in [feed][data][message]){ # Filtra los que no tienen message 
    mutate {
      add_field => {"palabras" => "%{[feed][data][message]}"}           # Crear un field con el message anidado
      add_field => {"created_date" => "%{[feed][data][created_time]}"}  # Crear otro field con la fecha anidada
      remove_field => ["feed", "@timestamp", "id", "@version"]          # Elimina todo lo que no se necesita
      # A partir de acá es como el ejemplo.
      lowercase => [ "palabras" ]
      # replace cualquiera de esos chars por un espacio en blanco
      gsub => ["palabras", "[\\?#-_!'().,]", " "] 
    }
    split {
      field => "palabras"
      target => "palabra"
      terminator => " "
    }
    mutate {
      remove_field => [ "palabras", "@version", "@timestamp"]
    }
    ruby {
      code => 'event.cancel if event.get("palabra").length < 4'
    }
  }
  else{ 
    #Si no cumple la condición de arriba no cuenta el dato.
    ruby {
      code => 'event.cancel'
    }
  }
}
output {
  stdout { }
  elasticsearch {
    hosts => ["http://10.0.0.3:9200"]
    index => "listapalabras"
  }  
}